- file: path={{ runit_binary_dir }} mode=0755 state=directory
- file: path={{ runit_service_dir }} mode=0755 state=directory

# assumes that the localhost has a compiler to make runit statically
- include: compile.yml
  when: not runit_use_precompiled_binary
  sudo: false

- unarchive: src={{ runit_build }}/runit-{{ ansible_architecture }}.tar.gz dest={{ runit_binary_dir }} mode=0755
  when: not runit_use_precompiled_binary
- unarchive: src=runit-{{ ansible_architecture }}.tar.gz dest={{ runit_binary_dir }} mode=0755
  when: runit_use_precompiled_binary
- file: path={{ runit_binary_dir }}/{{ item }} mode=0755 owner=root group=root
  with_items:
    - chpst
    - runit
    - runit-init
    - runsv
    - runsvchdir
    - runsvdir
    - sv
    - svlogd
    - utmpset

# Have to setup the runit startup
- template: dest={{ runit_binary_dir }}/runsvdir-start src=upstart-runsvdir-start.j2 mode=0755

# Check if it's upstart - /etc/init/
- stat: path=/etc/init get_md5=no get_checksum=no
  register: st
  tags: startup
- debug: var=st.stat.isdir
  tags: startup
- template: dest=/etc/init/runsvdir-start.conf src=upstart-runsvdir-start.conf.j2
  when: st.stat.isdir
  tags: startup
- service: name=runsvdir-start state=started
  sudo: true
  when: st.stat.isdir
  tags: startup

- lineinfile: dest=/etc/rc.local regexp='runsvdir-start' insertafter=EOF line="sh -cf '{{ runit_binary_dir }}/runsvdir-start' &"
  when: not st.stat.isdir
  tags: startup

- shell: pgrep runsvdir-start 
  register: pgrep_status
  ignore_errors: true
  when: not st.stat.isdir
  tags: startup

- debug: var=pgrep_status
  tags: startup

#- shell: |
#         setsid "{{ runit_binary_dir }}/runsvdir-start"
#         disown !$
#  when: pgrep_status.rc == 1
#  tags: test
